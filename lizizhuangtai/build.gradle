apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "com.test.lizizhuangtai"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

//    sourceSets {
//
//        main {
//            java.srcDirs('build/generated/ver')
//        }
//    }

//    def vrName

    /*task copyKing() {
//        dependsOn 'assembleRelease'
//        println "export ========="
//        Random random = new Random()
//        int intResult = random.nextLong()
//        intResult = intResult < 0 ? -intResult : intResult
//        vrName = "$intResult"
//        println "export $vrName"
//
//        def varDir = projects.project.buildDir.path + "/generated/ver"
//        def className = "Config"
//        def packageName = "com.omg.ver"
//        def classPath = packageName.replace(".", "/")
//        def templete = project.parent.project.file("script").absolutePath + "/VerTemplete"
//        def srcFile = new File(varDir)
//        srcFile.mkdirs()
//
//
//        def rootFile = project.buildFile.parentFile.parentFile
//        def verDesDir = rootFile.absolutePath + "/lizizhuangtai/build/generated/ver/$classPath/$className" + ".java"
//        InputStream inputStream = new FileInputStream(new File(templete))
//        File desFile = new File(verDesDir)
//        desFile.parentFile.mkdirs()
//        desFile.createNewFile()
//        byte[] buffer = new byte[inputStream.available()]
//        inputStream.read(buffer)
//        inputStream.close()
//        def tempStr = new String(buffer)
//        tempStr = tempStr.replace("[@packageName]", packageName)
//        tempStr = tempStr.replace("[@className]", className)
//        tempStr = tempStr.replace("[@ver]", vrName)
//        FileOutputStream fos = new FileOutputStream(desFile)
//        fos.write(tempStr.bytes)
//        fos.flush()
//        fos.close()
//        println "export ========= "+vrName

        dependsOn 'assembleRelease'
        doLast {
            def vrName

            println "export ========="
            Random random = new Random()
            int intResult = random.nextLong()
            intResult = intResult < 0 ? -intResult : intResult
            vrName = "$intResult"
            println "export $vrName"

            def className = "Config"
            def packageName = "com.omg.ver"
            def classPath = packageName.replace(".", "/")
            def templete = project.rootProject.file("script").absolutePath + "/VerTemplete"

            def verDesDir = project.rootProject.projectDir.absolutePath + "/lizizhuangtai/build/generated/ver/$classPath/$className" + ".java"
            InputStream inputStream = new FileInputStream(new File(templete))
            File desFile = new File(verDesDir)
            desFile.parentFile.mkdirs()
            desFile.createNewFile()
            byte[] buffer = new byte[inputStream.available()]
            inputStream.read(buffer)
            inputStream.close()
            def tempStr = new String(buffer)
            tempStr = tempStr.replace("[@packageName]", packageName)
            tempStr = tempStr.replace("[@className]", className)
            tempStr = tempStr.replace("[@ver]", vrName)
            FileOutputStream fos = new FileOutputStream(desFile)
            fos.write(tempStr.bytes)
            fos.flush()
            fos.close()

            project.ext.vrName = vrName
        }
    }*/


}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.0.0-alpha1'
    testCompile 'junit:junit:4.12'
//    compile 'com.umeng.analytics:analytics:latest.integration'
//    compile files('libs/zq.jar')
}
